apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'

android {

    compileSdkVersion configuration.compileSdkVersion
    buildToolsVersion configuration.buildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        disable 'InvalidPackage'
        abortOnError configuration.lint.abortOnError
    }

    defaultConfig {
        applicationId configuration.package
        minSdkVersion configuration.minSdkVersion
        targetSdkVersion configuration.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    buildTypes {

        debug{
            buildConfigField buildConfig.type.STRING, buildConfig.field.REST_ENDPOINT, "\"${buildConfig.debug.restEndpoint}\""
        }

        release {
            minifyEnabled false
            buildConfigField buildConfig.type.STRING, buildConfig.field.REST_ENDPOINT, "\"${buildConfig.release.restEndpoint}\""
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
//    wearApp project(':wear')

    // Support
    compile "com.android.support:appcompat-v7:${libraries.support}"
    compile "com.android.support:recyclerview-v7:${libraries.support}"
    compile "com.android.support:cardview-v7:${libraries.support}"
    compile "com.android.support:design:${libraries.support}"

    // Play services
    compile 'com.google.android.support:wearable:+'
    compile 'com.google.android.gms:play-services-wearable:+'

    // Dagger
    compile "com.google.dagger:dagger:${libraries.dagger}"
    apt "com.google.dagger:dagger-compiler:${libraries.daggerCompiler}"
    provided "org.glassfish:javax.annotation:${libraries.javaxAnnotation}"

    // RxJava
    compile "io.reactivex:rxjava:${libraries.rxjava}"
    compile "io.reactivex:rxandroid:${libraries.rxandroid}"


    // OkHttp
    compile "com.squareup.okhttp3:okhttp:${libraries.okhttp}"
    compile "com.squareup.okhttp3:logging-interceptor:${libraries.okhttpLogging}"

    // Retrofit
    compile "com.squareup.retrofit2:retrofit:${libraries.retrofit}"
    compile "com.squareup.retrofit2:adapter-rxjava:${libraries.retrofitAdapter}"
    compile "com.squareup.retrofit2:converter-gson:${libraries.retrofitConverter}"

    // Butterknife
    compile "com.jakewharton:butterknife:${libraries.butterknife}"

    // Timber
    compile "com.jakewharton.timber:timber:${libraries.timber}"

    // Recyclerview animator
    compile "jp.wasabeef:recyclerview-animators:${libraries.recyclerViewAnimator}"

    // Tests
    testCompile "junit:junit:${libraries.junit}"
}
